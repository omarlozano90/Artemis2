
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'CD03D565838978CFD377F9BC38505BBD'
    
_lr_action_items = {'DO':([16,20,29,35,37,39,40,41,42,44,45,46,47,48,55,65,74,75,76,82,93,94,95,104,108,109,121,133,134,137,139,140,141,142,143,144,147,148,152,153,155,],[35,35,35,35,-26,35,-25,35,-29,-31,-27,-28,-30,-24,35,-32,35,-23,-22,-40,-35,-36,-34,-19,-20,-21,-33,35,35,-65,-47,-46,-48,-39,-49,35,-37,35,-50,-38,35,]),'SEMICOL':([3,53,56,57,59,61,62,63,66,67,68,69,72,88,114,115,116,118,119,120,122,123,124,125,126,127,128,130,131,132,136,146,],[4,82,-58,-53,-56,-61,-60,-62,93,94,95,-72,104,-64,-54,-51,-52,-55,-57,-59,-70,-68,-71,-67,-69,-66,137,139,140,141,-63,152,]),'RETURN':([16,20,29,35,37,39,40,41,42,44,45,46,47,48,55,65,74,75,76,82,93,94,95,104,108,109,121,133,134,137,139,140,141,142,143,144,147,148,152,153,155,],[36,36,36,36,-26,36,-25,36,-29,-31,-27,-28,-30,-24,36,-32,36,-23,-22,-40,-35,-36,-34,-19,-20,-21,-33,36,36,-65,-47,-46,-48,-39,-49,36,-37,36,-50,-38,36,]),'NOTEQUAL':([56,57,59,61,62,63,69,88,114,115,116,118,119,120,136,],[-58,-53,-56,-61,-60,-62,96,-64,-54,-51,-52,-55,-57,-59,-63,]),'MTHANE':([56,57,59,61,62,63,69,88,114,115,116,118,119,120,136,],[-58,-53,-56,-61,-60,-62,97,-64,-54,-51,-52,-55,-57,-59,-63,]),'EQUAL':([13,64,88,136,],[32,92,-64,-63,]),'CHAR':([10,15,17,80,145,156,],[25,25,25,25,25,25,]),'COMA':([135,154,],[145,156,]),'OBRAC':([13,62,70,88,],[31,91,102,117,]),'PROGRAM':([0,],[1,]),'PRINT':([16,20,29,35,37,39,40,41,42,44,45,46,47,48,55,65,74,75,76,82,93,94,95,104,108,109,121,133,134,137,139,140,141,142,143,144,147,148,152,153,155,],[38,38,38,38,-26,38,-25,38,-29,-31,-27,-28,-30,-24,38,-32,38,-23,-22,-40,-35,-36,-34,-19,-20,-21,-33,38,38,-65,-47,-46,-48,-39,-49,38,-37,38,-50,-38,38,]),'OBRAK':([16,20,29,35,37,40,41,42,44,45,46,47,48,55,65,74,75,76,82,93,94,95,104,108,109,121,133,134,137,139,140,141,142,143,144,147,148,152,153,155,],[39,39,39,39,-26,-25,39,-29,-31,-27,-28,-30,-24,39,-32,39,-23,-22,-40,-35,-36,-34,-19,-20,-21,-33,39,39,-65,-47,-46,-48,-39,-49,39,-37,39,-50,-38,39,]),'MINUS':([56,57,59,61,62,63,88,114,118,119,120,136,],[-58,87,-56,-61,-60,-62,-64,-54,-55,-57,-59,-63,]),'CCHAR':([32,73,92,],[66,107,66,]),'DIVIDE':([56,59,61,62,63,88,119,120,136,],[-58,89,-61,-60,-62,-64,-57,-59,-63,]),'PLUS':([56,57,59,61,62,63,88,114,118,119,120,136,],[-58,86,-56,-61,-60,-62,-64,-54,-55,-57,-59,-63,]),'EQUALTO':([56,57,59,61,62,63,69,88,114,115,116,118,119,120,136,],[-58,-53,-56,-61,-60,-62,98,-64,-54,-51,-52,-55,-57,-59,-63,]),'CFLOAT':([31,32,36,60,73,77,78,85,86,87,89,91,92,96,97,98,99,100,101,102,117,129,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'OPAR':([22,23,24,25,26,31,32,36,38,43,49,51,60,73,77,78,85,86,87,89,91,92,96,97,98,99,100,101,102,103,117,129,],[-42,-44,-41,-43,-45,60,60,60,73,77,78,80,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,129,60,60,]),'EXIT':([50,52,54,75,76,84,108,109,],[79,81,83,-23,-22,113,-20,-21,]),'$end':([2,79,81,83,113,],[0,-4,-2,-3,-1,]),'FUNCTION':([4,6,7,9,11,12,14,18,28,65,75,76,82,93,94,95,108,109,121,137,149,150,157,158,],[5,-8,5,5,-7,5,5,-6,-5,-32,-23,-22,-40,-35,-36,-34,-20,-21,-33,-65,-15,-16,-18,-17,]),'STRING':([10,15,17,80,145,156,],[23,23,23,23,23,23,]),'CBRAK':([37,40,41,42,44,45,46,47,48,65,74,75,76,82,93,94,95,104,108,109,121,137,139,140,141,142,143,147,152,153,],[-26,-25,75,-29,-31,-27,-28,-30,-24,-32,108,-23,-22,-40,-35,-36,-34,-19,-20,-21,-33,-65,-47,-46,-48,-39,-49,-37,-50,-38,]),'CPAR':([56,57,59,61,62,63,69,88,90,105,106,107,110,111,114,115,116,118,119,120,122,123,124,125,126,127,135,136,138,154,],[-58,-53,-56,-61,-60,-62,-72,-64,119,130,131,132,133,134,-54,-51,-52,-55,-57,-59,-70,-68,-71,-67,-69,-66,144,-63,146,155,]),'CSTRING':([32,73,92,],[67,105,67,]),'CBRAC':([56,57,58,59,61,62,63,88,114,115,116,118,119,120,136,],[-58,-53,88,-56,-61,-60,-62,-64,-54,-51,-52,-55,-57,-59,-63,]),'TIMES':([56,57,59,61,62,63,88,114,118,119,120,136,],[-58,85,-56,-61,-60,-62,-64,-54,-55,-57,-59,-63,]),'LTHAN':([56,57,59,61,62,63,69,88,114,115,116,118,119,120,136,],[-58,-53,-56,-61,-60,-62,99,-64,-54,-51,-52,-55,-57,-59,-63,]),'VAR':([4,6,11,16,20,29,35,37,39,40,41,42,44,45,46,47,48,55,65,74,75,76,82,93,94,95,104,108,109,121,133,134,137,139,140,141,142,143,144,147,148,152,153,155,],[10,10,10,10,10,10,10,-26,10,-25,10,-29,-31,-27,-28,-30,-24,10,-32,10,-23,-22,-40,-35,-36,-34,-19,-20,-21,-33,10,10,-65,-47,-46,-48,-39,-49,10,-37,10,-50,-38,10,]),'ELSE':([75,76,108,109,142,],[-23,-22,-20,-21,148,]),'ID':([1,4,5,6,7,9,11,12,14,16,18,20,22,23,24,25,26,27,28,29,31,32,34,35,36,37,39,40,41,42,44,45,46,47,48,55,60,65,73,74,75,76,77,78,82,85,86,87,89,91,92,93,94,95,96,97,98,99,100,101,102,104,108,109,112,117,121,129,133,134,137,139,140,141,142,143,144,147,148,149,150,151,152,153,155,157,158,],[3,13,17,-8,13,13,-7,13,13,13,-6,13,-42,-44,-41,-43,-45,53,-5,13,62,62,70,13,62,-26,13,-25,13,-29,-31,-27,-28,-30,-24,13,62,-32,62,13,-23,-22,62,62,-40,62,62,62,62,62,62,-35,-36,-34,62,62,62,62,62,62,62,-19,-20,-21,135,62,-33,62,13,13,-65,-47,-46,-48,-39,-49,13,-37,13,-15,-16,154,-50,-38,13,-18,-17,]),'IF':([16,20,29,35,37,39,40,41,42,44,45,46,47,48,55,65,74,75,76,82,93,94,95,104,108,109,121,133,134,137,139,140,141,142,143,144,147,148,152,153,155,],[43,43,43,43,-26,43,-25,43,-29,-31,-27,-28,-30,-24,43,-32,43,-23,-22,-40,-35,-36,-34,-19,-20,-21,-33,43,43,-65,-47,-46,-48,-39,-49,43,-37,43,-50,-38,43,]),'ARR':([4,6,11,16,20,29,35,37,39,40,41,42,44,45,46,47,48,55,65,74,75,76,82,93,94,95,104,108,109,121,133,134,137,139,140,141,142,143,144,147,148,152,153,155,],[15,15,15,15,15,15,15,-26,15,-25,15,-29,-31,-27,-28,-30,-24,15,-32,15,-23,-22,-40,-35,-36,-34,-19,-20,-21,-33,15,15,-65,-47,-46,-48,-39,-49,15,-37,15,-50,-38,15,]),'INT':([10,15,17,80,145,156,],[24,24,24,24,24,24,]),'FLOAT':([10,15,17,80,145,156,],[22,22,22,22,22,22,]),'MTHAN':([56,57,59,61,62,63,69,88,114,115,116,118,119,120,136,],[-58,-53,-56,-61,-60,-62,101,-64,-54,-51,-52,-55,-57,-59,-63,]),'WHILE':([16,20,29,35,37,39,40,41,42,44,45,46,47,48,55,65,71,74,75,76,82,93,94,95,104,108,109,121,133,134,137,139,140,141,142,143,144,147,148,152,153,155,],[49,49,49,49,-26,49,-25,49,-29,-31,-27,-28,-30,-24,49,-32,103,49,-23,-22,-40,-35,-36,-34,-19,-20,-21,-33,49,49,-65,-47,-46,-48,-39,-49,49,-37,49,-50,-38,49,]),'BOOL':([10,15,17,80,145,156,],[26,26,26,26,26,26,]),'CINT':([31,32,36,60,73,77,78,85,86,87,89,91,92,96,97,98,99,100,101,102,117,129,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'MAIN':([4,6,7,8,9,11,12,14,18,19,21,28,30,33,65,75,76,82,93,94,95,108,109,121,137,149,150,157,158,],[16,-8,-13,20,-14,-7,29,-12,-6,-10,-11,-5,55,-9,-32,-23,-22,-40,-35,-36,-34,-20,-21,-33,-65,-15,-16,-18,-17,]),'LTHANE':([56,57,59,61,62,63,69,88,114,115,116,118,119,120,136,],[-58,-53,-56,-61,-60,-62,100,-64,-54,-51,-52,-55,-57,-59,-63,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'decvar':([4,6,11,16,20,29,35,39,41,55,74,133,134,144,148,155,],[6,6,6,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'asshelp':([32,92,],[65,121,]),'varcte':([31,32,36,60,73,77,78,85,86,87,89,91,92,96,97,98,99,100,101,102,117,129,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'assarr':([4,7,9,12,14,16,20,29,35,39,41,55,74,133,134,144,148,155,],[7,7,7,7,7,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'estatuto':([16,20,29,35,39,41,55,74,133,134,144,148,155,],[41,41,41,41,74,41,41,41,41,41,41,41,41,]),'writing':([16,20,29,35,39,41,55,74,133,134,144,148,155,],[42,42,42,42,42,42,42,42,42,42,42,42,42,]),'condition':([16,20,29,35,39,41,55,74,133,134,144,148,155,],[46,46,46,46,46,46,46,46,46,46,46,46,46,]),'factor':([31,32,36,60,73,77,78,85,86,87,89,91,92,96,97,98,99,100,101,102,117,129,],[59,59,59,59,59,59,59,114,59,59,118,59,59,59,59,59,59,59,59,59,59,59,]),'main':([0,],[2,]),'type':([10,15,17,80,145,156,],[27,34,51,112,151,151,]),'decfunc':([4,7,9,12,14,],[8,19,21,30,33,]),'function':([4,7,9,12,14,],[9,9,9,9,9,]),'return':([16,20,29,35,39,41,55,74,133,134,144,148,155,],[44,44,44,44,44,44,44,44,44,44,44,44,44,]),'decarr':([4,6,11,16,20,29,35,39,41,55,74,133,134,144,148,155,],[11,11,11,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'else':([142,],[147,]),'decglobal':([4,6,11,],[12,18,28,]),'association':([32,36,77,78,92,129,],[68,72,110,111,68,138,]),'cycle':([16,20,29,35,39,41,55,74,133,134,144,148,155,],[47,47,47,47,47,47,47,47,47,47,47,47,47,]),'assvar':([4,7,9,12,14,16,20,29,35,39,41,55,74,133,134,144,148,155,],[14,14,14,14,14,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'term':([31,32,36,60,73,77,78,86,87,91,92,96,97,98,99,100,101,102,117,129,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'functionhelp':([145,156,],[150,158,]),'exp':([31,32,36,60,73,77,78,86,87,91,92,96,97,98,99,100,101,102,117,129,],[58,69,69,90,106,69,69,115,116,58,69,122,123,124,125,126,127,58,58,69,]),'block':([16,20,29,35,41,55,74,133,134,144,148,155,],[50,52,54,71,76,84,109,142,143,149,153,157,]),'arrdim':([31,91,102,117,],[64,120,128,136,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> PROGRAM ID SEMICOL decglobal decfunc MAIN block EXIT','main',8,'p_progmain','parsecon.py',11),
  ('main -> PROGRAM ID SEMICOL decfunc MAIN block EXIT','main',7,'p_progmain','parsecon.py',12),
  ('main -> PROGRAM ID SEMICOL decglobal MAIN block EXIT','main',7,'p_progmain','parsecon.py',13),
  ('main -> PROGRAM ID SEMICOL MAIN block EXIT','main',6,'p_progmain','parsecon.py',14),
  ('decglobal -> decarr decglobal','decglobal',2,'p_decglobal','parsecon.py',18),
  ('decglobal -> decvar decglobal','decglobal',2,'p_decglobal','parsecon.py',19),
  ('decglobal -> decarr','decglobal',1,'p_decglobal','parsecon.py',20),
  ('decglobal -> decvar','decglobal',1,'p_decglobal','parsecon.py',21),
  ('decfunc -> assvar decfunc','decfunc',2,'p_decfunc','parsecon.py',25),
  ('decfunc -> assarr decfunc','decfunc',2,'p_decfunc','parsecon.py',26),
  ('decfunc -> function decfunc','decfunc',2,'p_decfunc','parsecon.py',27),
  ('decfunc -> assvar','decfunc',1,'p_decfunc','parsecon.py',28),
  ('decfunc -> assarr','decfunc',1,'p_decfunc','parsecon.py',29),
  ('decfunc -> function','decfunc',1,'p_decfunc','parsecon.py',30),
  ('function -> FUNCTION ID type OPAR type ID CPAR block','function',8,'p_function','parsecon.py',33),
  ('function -> FUNCTION ID type OPAR type ID COMA functionhelp','function',8,'p_function','parsecon.py',34),
  ('functionhelp -> type ID COMA functionhelp','functionhelp',4,'p_functionhelp','parsecon.py',37),
  ('functionhelp -> type ID CPAR block','functionhelp',4,'p_functionhelp','parsecon.py',38),
  ('return -> RETURN association SEMICOL','return',3,'p_return','parsecon.py',41),
  ('block -> OBRAK estatuto CBRAK','block',3,'p_block','parsecon.py',44),
  ('block -> OBRAK estatuto block','block',3,'p_block','parsecon.py',45),
  ('block -> estatuto block','block',2,'p_block','parsecon.py',46),
  ('block -> estatuto CBRAK','block',2,'p_block','parsecon.py',47),
  ('estatuto -> assvar','estatuto',1,'p_estatuto','parsecon.py',50),
  ('estatuto -> assarr','estatuto',1,'p_estatuto','parsecon.py',51),
  ('estatuto -> decvar','estatuto',1,'p_estatuto','parsecon.py',52),
  ('estatuto -> decarr','estatuto',1,'p_estatuto','parsecon.py',53),
  ('estatuto -> condition','estatuto',1,'p_estatuto','parsecon.py',54),
  ('estatuto -> writing','estatuto',1,'p_estatuto','parsecon.py',55),
  ('estatuto -> cycle','estatuto',1,'p_estatuto','parsecon.py',56),
  ('estatuto -> return','estatuto',1,'p_estatuto','parsecon.py',57),
  ('assvar -> ID EQUAL asshelp','assvar',3,'p_assvar','parsecon.py',60),
  ('assarr -> ID OBRAC arrdim EQUAL asshelp','assarr',5,'p_assarr','parsecon.py',65),
  ('asshelp -> association SEMICOL','asshelp',2,'p_asshelp','parsecon.py',69),
  ('asshelp -> CCHAR SEMICOL','asshelp',2,'p_asshelp','parsecon.py',70),
  ('asshelp -> CSTRING SEMICOL','asshelp',2,'p_asshelp','parsecon.py',71),
  ('condition -> IF OPAR association CPAR block else','condition',6,'p_condition','parsecon.py',74),
  ('else -> ELSE block','else',2,'p_else','parsecon.py',77),
  ('else -> <empty>','else',0,'p_else','parsecon.py',78),
  ('decvar -> VAR type ID SEMICOL','decvar',4,'p_decvar','parsecon.py',81),
  ('type -> INT','type',1,'p_type','parsecon.py',86),
  ('type -> FLOAT','type',1,'p_type','parsecon.py',87),
  ('type -> CHAR','type',1,'p_type','parsecon.py',88),
  ('type -> STRING','type',1,'p_type','parsecon.py',89),
  ('type -> BOOL','type',1,'p_type','parsecon.py',90),
  ('writing -> PRINT OPAR exp CPAR SEMICOL','writing',5,'p_writing','parsecon.py',94),
  ('writing -> PRINT OPAR CSTRING CPAR SEMICOL','writing',5,'p_writing','parsecon.py',95),
  ('writing -> PRINT OPAR CCHAR CPAR SEMICOL','writing',5,'p_writing','parsecon.py',96),
  ('cycle -> WHILE OPAR association CPAR block','cycle',5,'p_cycle','parsecon.py',99),
  ('cycle -> DO block WHILE OPAR association CPAR SEMICOL','cycle',7,'p_cycle','parsecon.py',100),
  ('exp -> term PLUS exp','exp',3,'p_exp','parsecon.py',106),
  ('exp -> term MINUS exp','exp',3,'p_exp','parsecon.py',107),
  ('exp -> term','exp',1,'p_exp','parsecon.py',108),
  ('term -> term TIMES factor','term',3,'p_term','parsecon.py',111),
  ('term -> factor DIVIDE factor','term',3,'p_term','parsecon.py',112),
  ('term -> factor','term',1,'p_term','parsecon.py',113),
  ('factor -> OPAR exp CPAR','factor',3,'p_factor','parsecon.py',116),
  ('factor -> varcte','factor',1,'p_factor','parsecon.py',117),
  ('varcte -> ID OBRAC arrdim','varcte',3,'p_varcte','parsecon.py',120),
  ('varcte -> ID','varcte',1,'p_varcte','parsecon.py',121),
  ('varcte -> CINT','varcte',1,'p_varcte','parsecon.py',122),
  ('varcte -> CFLOAT','varcte',1,'p_varcte','parsecon.py',123),
  ('arrdim -> exp CBRAC OBRAC arrdim','arrdim',4,'p_arrdim','parsecon.py',129),
  ('arrdim -> exp CBRAC','arrdim',2,'p_arrdim','parsecon.py',130),
  ('decarr -> ARR type ID OBRAC arrdim SEMICOL','decarr',6,'p_decarr','parsecon.py',134),
  ('association -> exp MTHAN exp','association',3,'p_association','parsecon.py',138),
  ('association -> exp LTHAN exp','association',3,'p_association','parsecon.py',139),
  ('association -> exp MTHANE exp','association',3,'p_association','parsecon.py',140),
  ('association -> exp LTHANE exp','association',3,'p_association','parsecon.py',141),
  ('association -> exp NOTEQUAL exp','association',3,'p_association','parsecon.py',142),
  ('association -> exp EQUALTO exp','association',3,'p_association','parsecon.py',143),
  ('association -> exp','association',1,'p_association','parsecon.py',144),
]
